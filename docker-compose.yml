version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: alp-postgres
    environment:
      POSTGRES_DB: alpsys
      POSTGRES_USER: alpsys_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password123}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - alp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U alpsys_user -d alpsys"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: alp-redis
    ports:
      - "6379:6379"
    networks:
      - alp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ZKO Backend Service
  zko-service:
    build:
      context: ./services/zko-service
      dockerfile: Dockerfile
    container_name: alp-zko-service
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: alpsys
      DB_USER: alpsys_user
      DB_PASSWORD: ${DB_PASSWORD:-password123}
      JWT_SECRET: ${JWT_SECRET:-change-this-secret}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - alp-network
    volumes:
      - ./services/zko-service:/app
      - /app/node_modules

  # ZKO Frontend App
  zko-app:
    build:
      context: ./apps/zko
      dockerfile: Dockerfile
    container_name: alp-zko-app
    environment:
      VITE_API_URL: http://localhost:5000/api
    ports:
      - "3001:3000"
    depends_on:
      - zko-service
    networks:
      - alp-network
    volumes:
      - ./apps/zko:/app
      - /app/node_modules

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: alp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - zko-app
      - zko-service
    networks:
      - alp-network

  # Adminer - Database Management
  adminer:
    image: adminer:4.8.1
    container_name: alp-adminer
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - alp-network

networks:
  alp-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
