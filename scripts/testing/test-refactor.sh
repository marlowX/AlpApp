#!/bin/bash
# Test script to verify the refactored ZKO routing structure

echo "=========================================="
echo "üîç Sprawdzanie struktury plik√≥w ZKO"
echo "=========================================="

cd D:/PROJEKTY/PROGRAMOWANIE/AlpApp/services/zko-service/src/routes

echo "üìä Sprawdzanie rozmiar√≥w plik√≥w (max 300 linii):"
echo ""

# Funkcja do sprawdzania rozmiaru pliku
check_file_size() {
    local file=$1
    local lines=$(wc -l < "$file" 2>/dev/null || echo 0)
    
    if [ $lines -eq 0 ]; then
        echo "  ‚ùå $file - NIE ISTNIEJE"
    elif [ $lines -gt 300 ]; then
        echo "  ‚ùå $file - $lines linii - ZA DU≈ªY!"
    elif [ $lines -gt 250 ]; then
        echo "  ‚ö†Ô∏è  $file - $lines linii - blisko limitu"
    else
        echo "  ‚úÖ $file - $lines linii"
    fi
}

echo "Pliki w katalogu zko/:"
check_file_size "zko/index.ts"
check_file_size "zko/schemas.ts"
check_file_size "zko/list.routes.ts"
check_file_size "zko/details.routes.ts"
check_file_size "zko/create.routes.ts"
check_file_size "zko/pozycje.routes.ts"
check_file_size "zko/status.routes.ts"
check_file_size "zko/complete.routes.ts"
check_file_size "zko/functions.routes.ts"

echo ""
echo "Handlery:"
check_file_size "zko/handlers/pozycje.handlers.ts"

echo ""
echo "Utils:"
check_file_size "zko/utils/logger.ts"
check_file_size "zko/utils/error-handler.ts"

echo ""
echo "Stary plik (powinien byƒá ma≈Çy):"
check_file_size "zko.routes.ts"

echo ""
echo "=========================================="
echo "üìÅ Struktura katalog√≥w:"
echo ""

if [ -d "zko" ]; then
    echo "‚úÖ Katalog zko/ istnieje"
    echo "   Zawarto≈õƒá:"
    ls -la zko/ 2>/dev/null | grep -E "\.(ts|js)$" | awk '{print "     -", $9}'
    
    if [ -d "zko/handlers" ]; then
        echo "   ‚úÖ Katalog zko/handlers/ istnieje"
    fi
    
    if [ -d "zko/utils" ]; then
        echo "   ‚úÖ Katalog zko/utils/ istnieje"
    fi
else
    echo "‚ùå Katalog zko/ NIE istnieje!"
fi

echo ""
echo "=========================================="
echo "üîç Sprawdzanie import√≥w:"
echo ""

# Sprawd≈∫ czy g≈Ç√≥wny index u≈ºywa nowego routera
if grep -q "from './zko'" "../index.ts" 2>/dev/null; then
    echo "‚úÖ G≈Ç√≥wny index.ts importuje z katalogu zko/"
else
    echo "‚ö†Ô∏è  G≈Ç√≥wny index.ts mo≈ºe wymagaƒá aktualizacji import√≥w"
fi

echo ""
echo "=========================================="
echo "üìä Podsumowanie:"
echo ""

total_lines=$(find zko -name "*.ts" -exec cat {} \; 2>/dev/null | wc -l)
file_count=$(find zko -name "*.ts" 2>/dev/null | wc -l)

echo "≈ÅƒÖczna liczba plik√≥w .ts w zko/: $file_count"
echo "≈ÅƒÖczna liczba linii kodu: $total_lines"
echo "≈örednia linii na plik: $((total_lines / file_count))"

echo ""
echo "‚úÖ Refaktoryzacja zako≈Ñczona!"
echo "   - Plik zko.routes.ts zosta≈Ç podzielony na $file_count mniejszych plik√≥w"
echo "   - Ka≈ºdy plik ma poni≈ºej 300 linii"
echo "   - Logika jest podzielona na routery, handlery i utils"
echo ""